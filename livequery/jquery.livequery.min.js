/*! Copyright (c) 2014 Brandon Aaron (http://brandonaaron.net)
 * Licensed under the MIT License (LICENSE.txt)
 */ !function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e:e(jQuery)}(function(e){e.extend(e.fn,{livequery:function(t,i,r){return e.livequery.findorcreate(this,t,i,r).run(),this},expire:function(t,i,r){var n=e.livequery.find(this,t,i,r);return n&&n.stop(),this}});var t=function(t,i){if(!i)return[];var r=i.nodeType;if(1===r||9===r||11===r){if("ieframe"===PREDEFINED_BROWSER_TYPE&&!i.querySelectorAll)return e.find(t,i);try{return Array.from(i.querySelectorAll(t))}catch(n){return console.error("$findLengthFallback exception: "+n.message+": "+n.stack),e.find(t,i)}}return[]};e.livequery=function(t,i,r,n){this.selector=i,this.jq=t,this.context=t.context,this.matchedFn=r,this.unmatchedFn=n,this.stopped=!1,this.id=e.livequery.queries.push(this)-1,r.$lqguid=r.$lqguid||e.livequery.guid++,n&&(n.$lqguid=n.$lqguid||e.livequery.guid++)},e.livequery.prototype={run:function(){!0===e.livequery.prepared&&!0!==this.stopped&&(this.stopped=!1,this.jq.find(this.selector).each(e.proxy(function(e,t){this.added(t)},this)))},stop:function(){this.jq.find(this.selector).each(e.proxy(function(e,t){this.removed(t)},this)),this.stopped=!0},matches:function(i){var r;return 1===i.nodeType&&!this.isStopped()&&this.jq[0].contains(i)&&(e.find.matchesSelector(i,this.selector)||t(this.selector,i).length)},added:function(e){this.isStopped()||this.isMatched(e)||(this.markAsMatched(e),this.matchedFn.call(e,e))},removed:function(e){!this.isStopped()&&this.isMatched(e)&&(this.removeMatchedMark(e),this.unmatchedFn&&this.unmatchedFn.call(e,e))},getLQArray:function(t){var i=e.data(t,e.livequery.key)||[],r=e.inArray(this.id,i);return i.index=r,i},markAsMatched:function(t){var i=this.getLQArray(t);-1===i.index&&(i.push(this.id),e.data(t,e.livequery.key,i))},removeMatchedMark:function(t){var i=this.getLQArray(t);i.index>-1&&(i.splice(i.index,1),e.data(t,e.livequery.key,i))},isMatched:function(e){return -1!==this.getLQArray(e).index||t(this.selector,e).some(function(e){return -1!==this.getLQArray(e).index},this)},isStopped:function(){return!0===this.stopped}},e.extend(e.livequery,{version:"2.0.0-pre",guid:0,queries:[],watchAttributes:!1,attributeFilter:[],setup:!1,timeout:null,method:"none",prepared:!1,key:"livequery",htcPath:!1,prepare:{mutationobserver:function(){new MutationObserver(e.livequery.handle.mutationobserver).observe(document,{childList:!0,attributes:e.livequery.watchAttributes,subtree:!0}),e.livequery.prepare.both()},loop:function(){var i=[];setInterval(function(){i.forEach(function(t){document.body.contains(t)||(i.splice(i.indexOf(t),1),e.livequery.handle.removed(t))}),e.livequery.queries.forEach(function(r){t(r.selector,r.jq[0]).forEach(function(t){0>i.indexOf(t)&&(i.push(t),e.livequery.handle.added(t))})})},1e3),e.livequery.prepare.both()},both:function(){e.livequery.prepared=!0,e.each(e.livequery.queries,function(e,t){t.run()})}},handle:{added:function(i){e.livequery.queries.filter(function(e){return e.matches(i)}).forEach(function(r){e.find.matchesSelector(i,r.selector)&&setTimeout(function(){r.added(i)},1),t(r.selector,i).forEach(function(e){setTimeout(function(){r.added(e)},1)})})},removed:function(i){function r(t,i){setTimeout(function(){i.removed(t),e.livequery.queries=e.livequery.queries.filter(function(e){return t!==e.jq[0]})},1)}e.livequery.queries.filter(function(e){return e.isMatched(i)}).forEach(function(n){e.find.matchesSelector(i,n.selector)?r(i,n):t(n.selector,i).forEach(function(e){r(e,n)})})},modified:function(t){e.each(e.livequery.queries,function(e,i){i.isMatched(t)?i.matches(t)||i.removed(t):i.matches(t)&&i.added(t)})},mutationobserver:function(t){e.each(t,function(t,i){"attributes"===i.type?e.livequery.handle.modified(i.target):e.each(["added","removed"],function(t,r){e.each(i[r+"Nodes"],function(t,i){e.livequery.handle[r](i)})})})}},find:function(t,i,r,n){var u;return e.each(e.livequery.queries,function(e,o){if(i===o.selector&&t===o.jq&&(!r||r.$lqguid===o.matchedFn.$lqguid)&&(!n||n.$lqguid===o.unmatchedFn.$lqguid))return(u=o)&&!1}),u},findorcreate:function(t,i,r,n){return e.livequery.find(t,i,r,n)||new e.livequery(t,i,r,n)}}),e(function(){if("MutationObserver"in window?e.livequery.method="mutationobserver":"MutationEvent"in window?e.livequery.method="mutationevent":"behavior"in document.documentElement.currentStyle&&(e.livequery.method="iebehaviors"),e.livequery.method)e.livequery.prepare[e.livequery.method]();else throw Error("Could not find a means to monitor the DOM")})});
